 ```cpp
#include<iostream>
#include <vector>
using namespace std;
int maximum(int a,int b)
{
    if(a>b){
        return a;
    }
    else{
        return b;
    }
}
int market(vector<int>price){

    //single transaction
    int n= price.size();
    vector<int>profit(n);

    for(int i=0;i<n;i++){
        profit[i]=0;
    }
    int max=price[n-1];
    for(int i=n-2;i>=0;i--){
        if(max<price[i]){
            max=price[i];
        }

        profit[i]=maximum(profit[i+1],(max-price[i]));

    }
    //Double transaction
    //Minimum transaction to calculate  the max profit in buy sell

    int min= price[0];

    for(int i=1;i<n;i++){
        if(min>price[i]){
            min=price[i];
        }
        profit[i]=maximum(profit[i-1],profit[i]+(price[i]-min));
    }


    return  profit[n-1];

}

int main(){
    vector<int>vec{2, 30, 15, 10, 8, 25, 80};
    cout<<"Maximum profit with two trasaction : Rps "<<market(vec);
    return 0;
}
```
